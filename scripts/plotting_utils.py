import numpy as np
import pandas as pd
from pathlib import Path
import datetime
import kaleido # required for saveFig
import plotly.graph_objects as go
import plotly.io as pio
import plotly.express as px


# --------------------------------------------------------

# Saving figures

OUTPUTPATH = Path('./output/')
DATAPATH = Path('./data/')

def get_timestamp(date=True,time=True):
    dt = datetime.datetime.now()
    if date and time:
        return dt.strftime('%Y-%m-%d_%H-%M-%S')
    elif date:
        return dt.strftime('%Y-%m-%d')
    else:
        return dt.strftime('%H-%M-%S')

def save_fig(fig, filename='untitled', path=OUTPUTPATH, add_time=True, html=True, png=True, svg=False, json=False, scale=2, save_condition=True):
    if not save_condition:
        return
    if add_time:
        filename = f'{get_timestamp()}_{filename}'
    if html:
        fig.write_html(path / (filename + '.html'))
    if png:
        fig.write_image(path / (filename + '.png'), scale=scale)
    if svg:
        fig.write_image(path / (filename + '.svg'))
    if json:
        fig.write_json(path / (filename + '.json'), pretty=True)

# --------------------------------------------------------

# Notebook analysis utils

pd.options.plotting.backend = "plotly"

def darkmode() -> bool:
    return False if int(get_timestamp(date=False).split('-')[0]) <= 18 else True
def dark_or_light() -> str:
    return 'plotly_dark' if darkmode() else 'plotly'
def black_or_white() -> str:
    return 'white' if darkmode() else 'black'

# Global variable to control saving of figures
global save
save = False
def toggle_save() -> bool:
    global save
    save = not save
    print(f'Saving figures is now {'ON' if save else 'OFF'}')
    return save
def set_save(setting: bool) -> bool:
    global save
    save = setting
    print(f'Saving figures is now {'ON' if save else 'OFF'}')
    return save
def save_is_on():
    global save
    return save

PLOTLY_CONFIG = {
    'displaylogo': False,
    'scrollZoom': True,
    'toImageButtonOptions': {
        'format': 'png', # one of png, svg, jpeg, webp
        'filename': 'custom_image',
        #'height': 500,
        #'width': 700,
        'scale':2 # Multiply title/legend/axis/canvas sizes by this factor
    }
}

# --------------------------------------------------------

# Templates

plotly_template = pio.templates['plotly']
PLOTLY_BLUE, PLOTLY_RED = ['#636EFA', '#EF553B']
PLOTLY_GREEN = px.colors.DEFAULT_PLOTLY_COLORS[2]


fca_blue = '#0A5680'
highlight_blue = '#0293D2'
light_blue = '#70D2F0'
sand_yellow = '#E2B681'
green = '#91C096'
magenta_red = '#D75674'
turquois = '#83D1DD'
blue_black = '#33434D'
very_dark_gray = '#525F6A'
dark_gray = '#71828F'
blue_gray = '#8CA5B7'
gray = '#B7C1C8'
light_blue_gray = '#BDCCD9'
light_gray = '#D6DBDF'

fca_colorway_v1 = [fca_blue, dark_gray, light_blue, gray, highlight_blue, very_dark_gray, turquois, blue_black, light_blue_gray] 

fca_template = go.layout.Template()
fca_template.layout=go.Layout(
    title=dict(
        # xanchor='left',
        # yanchor='top',
        font=dict(family='Titillium Web SemiBold', size=18, color=blue_black),
    ),
    font=dict(family='Titillium Web', size=18, color=blue_black),
    xaxis=dict(
        title=dict(
            font=dict(family='Titillium Web', size=18, color=blue_black),
            standoff=10,
        ),
        ticklabelstandoff=10,
        showline=True,
        linewidth=2,
        linecolor=blue_black
    ),
    yaxis=dict(
        title_font=dict(family='Titillium Web', size=18, color=blue_black),
        ticklabelstandoff=10,
        gridcolor=light_gray, 
        linewidth=2,
        linecolor=None,
        showline=False,
    ),
    colorway=fca_colorway_v1,
    autosize=False,
    width=960,
    height=540,
    # margin=dict(l=960-(521+36), r=36, t=3*36+43, b=59+36),
    # annotations=[dict(
    #     name='test_annotation', # non-empty string required
    #     xref="paper",
    #     yref="paper",
    #     x=0,
    #     y=1,
    #     xanchor='left',
    #     yanchor='top',
    #     showarrow=False,
    #     font=dict(family='Titillium Web', size=18)
    # ),],
    legend=dict(
        x=1,
        y=1,
        xanchor='right',
        yanchor='top',
    ),

)    


# FCA colormap
cm_data = [
    [0.19336174, 0.26378673, 0.3025569],
    [0.19364304, 0.26610583, 0.30703146],
    [0.1939503, 0.26841819, 0.31146308],
    [0.19423889, 0.27072943, 0.31590992],
    [0.19449558, 0.2730411, 0.32038888],
    [0.19471714, 0.27535348, 0.32490372],
    [0.19491017, 0.27766572, 0.32944579],
    [0.19506328, 0.279979, 0.33402907],
    [0.19518186, 0.28229261, 0.33864631],
    [0.19526484, 0.28460656, 0.34329843],
    [0.19531079, 0.28692089, 0.34798671],
    [0.19531278, 0.28923619, 0.35271908],
    [0.19527956, 0.29155144, 0.35748422],
    [0.19520636, 0.29386701, 0.36228738],
    [0.19508798, 0.29618326, 0.36713415],
    [0.19493081, 0.29849945, 0.37201613],
    [0.19472688, 0.30081618, 0.37694211],
    [0.19447849, 0.3031331, 0.3819085],
    [0.19418938, 0.30544974, 0.38691015],
    [0.19384711, 0.30776702, 0.39196069],
    [0.19345767, 0.31008427, 0.39705215],
    [0.1930212, 0.31240133, 0.40218345],
    [0.19253425, 0.31471831, 0.40735751],
    [0.19199445, 0.31703523, 0.41257589],
    [0.19139719, 0.31935226, 0.41784256],
    [0.19074645, 0.32166891, 0.42315182],
    [0.19003849, 0.32398526, 0.4285065],
    [0.1892733, 0.32630113, 0.43390526],
    [0.18844592, 0.32861667, 0.439352],
    [0.18755791, 0.33093155, 0.44484351],
    [0.18660436, 0.33324588, 0.45038335],
    [0.18558353, 0.33555955, 0.45597159],
    [0.1844922, 0.33787252, 0.46160969],
    [0.18333085, 0.34018453, 0.46729518],
    [0.18210855, 0.34249884, 0.47298939],
    [0.18077026, 0.34482099, 0.47872449],
    [0.17930541, 0.34715201, 0.48450087],
    [0.17769591, 0.34949337, 0.49032426],
    [0.17593403, 0.35184605, 0.49618885],
    [0.17399912, 0.35421181, 0.50209846],
    [0.17188837, 0.35659279, 0.50803101],
    [0.16956348, 0.35899166, 0.51400137],
    [0.16700006, 0.36141038, 0.52000906],
    [0.16416455, 0.36385278, 0.52604771],
    [0.1610337, 0.36632444, 0.53208449],
    [0.15752577, 0.36882994, 0.53814882],
    [0.15360712, 0.37137813, 0.54418353],
    [0.14917845, 0.3739791, 0.55017893],
    [0.14413161, 0.37664676, 0.55609185],
    [0.13833039, 0.3794006, 0.56184617],
    [0.13164689, 0.38226569, 0.56729526],
    [0.12401748, 0.38526754, 0.57221162],
    [0.11578205, 0.38840983, 0.57621146],
    [0.1078785, 0.3916378, 0.57897519],
    [0.10137585, 0.39485695, 0.58053877],
    [0.09674017, 0.39800904, 0.58118626],
    [0.09379957, 0.4010781, 0.5812783],
    [0.09231343, 0.404072, 0.58099137],
    [0.09201055, 0.40700049, 0.58045697],
    [0.09264656, 0.40987383, 0.57975765],
    [0.09400814, 0.41269954, 0.57896166],
    [0.09596389, 0.41548377, 0.57809418],
    [0.09838625, 0.41823245, 0.57717698],
    [0.10118771, 0.42094994, 0.57621979],
    [0.10426088, 0.42363924, 0.57525581],
    [0.10755964, 0.42630393, 0.5742797],
    [0.11105303, 0.42894588, 0.57329017],
    [0.11467259, 0.43156794, 0.57230496],
    [0.11838823, 0.43417148, 0.57133048],
    [0.12217549, 0.43675883, 0.57036403],
    [0.12601263, 0.43933063, 0.56941473],
    [0.12988317, 0.44188893, 0.56847877],
    [0.13377245, 0.44443476, 0.56755975],
    [0.1376688, 0.44696937, 0.5666581],
    [0.14153679, 0.44949464, 0.56579001],
    [0.14533645, 0.45201521, 0.56495665],
    [0.14907306, 0.45453212, 0.56415069],
    [0.1527499, 0.45704568, 0.56337158],
    [0.15637008, 0.45955622, 0.56261832],
    [0.15993723, 0.46206392, 0.56189053],
    [0.16345349, 0.46456906, 0.56118778],
    [0.16692056, 0.46707211, 0.56050853],
    [0.17034054, 0.4695733, 0.55985248],
    [0.17371552, 0.47207293, 0.5592185],
    [0.17704732, 0.47457122, 0.55860619],
    [0.18033785, 0.47706849, 0.55801408],
    [0.1835887, 0.47956494, 0.55744177],
    [0.18680139, 0.48206077, 0.55688878],
    [0.18997745, 0.4845562, 0.55635427],
    [0.19311831, 0.48705145, 0.5558374],
    [0.19622544, 0.48954679, 0.55533668],
    [0.1993, 0.49204229, 0.55485239],
    [0.20234332, 0.49453818, 0.55438345],
    [0.2053567, 0.49703468, 0.55392845],
    [0.20834131, 0.4995319, 0.55348698],
    [0.21129823, 0.50202994, 0.55305894],
    [0.21423037, 0.5045288, 0.55264248],
    [0.21713768, 0.50702865, 0.55223802],
    [0.22002113, 0.50952974, 0.55184365],
    [0.22288185, 0.51203218, 0.55145867],
    [0.22572095, 0.51453603, 0.55108258],
    [0.22853965, 0.51704145, 0.55071371],
    [0.23133901, 0.51954843, 0.5503522],
    [0.23412028, 0.52205714, 0.54999604],
    [0.23688457, 0.52456754, 0.54964538],
    [0.23963426, 0.52707952, 0.54929904],
    [0.24237281, 0.5295926, 0.54895763],
    [0.24509837, 0.53210743, 0.54861884],
    [0.24781224, 0.53462407, 0.54828107],
    [0.25051565, 0.53714245, 0.54794429],
    [0.25320995, 0.53966259, 0.54760699],
    [0.25590104, 0.54218354, 0.5472701],
    [0.25858787, 0.5447057, 0.54693227],
    [0.26127012, 0.54722939, 0.54659136],
    [0.26394926, 0.54975456, 0.54624622],
    [0.26663083, 0.55228029, 0.54589767],
    [0.26931658, 0.55480638, 0.54554523],
    [0.27200426, 0.55733352, 0.54518609],
    [0.27469584, 0.55986155, 0.54481921],
    [0.27740194, 0.56238835, 0.54444808],
    [0.28011546, 0.56491569, 0.54406727],
    [0.28283875, 0.56744322, 0.54367622],
    [0.28558354, 0.56996861, 0.54327876],
    [0.2883417, 0.5724938, 0.54286894],
    [0.29112033, 0.5750174, 0.54244855],
    [0.29392364, 0.57753865, 0.5420178],
    [0.29674753, 0.58005861, 0.54157256],
    [0.29960634, 0.58257432, 0.54111751],
    [0.30248959, 0.58508816, 0.5406462],
    [0.30541324, 0.58759671, 0.54016467],
    [0.30838386, 0.59009942, 0.53966529],
    [0.31144311, 0.59258828, 0.53915271],
    [0.31457214, 0.59506674, 0.53862345],
    [0.31779406, 0.59753002, 0.53808181],
    [0.32109221, 0.5999811, 0.53752541],
    [0.32448098, 0.60241683, 0.53695686],
    [0.32795593, 0.60483771, 0.53637638],
    [0.33151607, 0.60724362, 0.53578405],
    [0.33517373, 0.60963158, 0.53518369],
    [0.33891568, 0.6120039, 0.53457346],
    [0.3427525, 0.61435794, 0.53395634],
    [0.34668295, 0.6166934, 0.53333407],
    [0.35070028, 0.61901123, 0.53270641],
    [0.35481462, 0.6213087, 0.53207725],
    [0.35902089, 0.62358633, 0.5314474],
    [0.36331371, 0.62584469, 0.53081753],
    [0.36769913, 0.62808182, 0.53019144],
    [0.37217552, 0.63029744, 0.52957098],
    [0.37673515, 0.63249267, 0.52895645],
    [0.38137776, 0.63466691, 0.52835043],
    [0.38611007, 0.6368179, 0.52775776],
    [0.39091931, 0.63894796, 0.52717741],
    [0.39580297, 0.64105706, 0.52661143],
    [0.40076431, 0.64314374, 0.52606386],
    [0.40579878, 0.64520842, 0.52553636],
    [0.41089833, 0.64725247, 0.5250292],
    [0.41605959, 0.64927614, 0.52454417],
    [0.42128914, 0.65127714, 0.5240867],
    [0.42657345, 0.65325835, 0.52365484],
    [0.43190845, 0.65522031, 0.52324991],
    [0.43729569, 0.65716209, 0.52287535],
    [0.44273142, 0.65908422, 0.52253229],
    [0.44820671, 0.66098868, 0.5222196],
    [0.45372083, 0.66287526, 0.52193934],
    [0.45927507, 0.66474323, 0.5216946],
    [0.46485819, 0.66659541, 0.52148232],
    [0.47047027, 0.66843154, 0.5213042],
    [0.47611267, 0.67025093, 0.52116289],
    [0.48177435, 0.67205663, 0.52105432],
    [0.48745628, 0.67384829, 0.52097894],
    [0.49315452, 0.67562697, 0.52093603],
    [0.49886304, 0.67739448, 0.52092277],
    [0.5045901, 0.6791481, 0.52094544],
    [0.51032434, 0.6808914, 0.52099791],
    [0.51607009, 0.68262299, 0.52108309],
    [0.52182449, 0.6843437, 0.52120077],
    [0.52758474, 0.68605457, 0.52134836],
    [0.53335469, 0.68775423, 0.52153001],
    [0.53912625, 0.68944556, 0.52173917],
    [0.54490782, 0.69112564, 0.52198308],
    [0.55068869, 0.69279831, 0.52225316],
    [0.55647841, 0.69446031, 0.52255638],
    [0.56226607, 0.69611551, 0.52288524],
    [0.56806153, 0.69776059, 0.5232461],
    [0.57385501, 0.69939918, 0.52363077],
    [0.57965521, 0.70102815, 0.52404692],
    [0.58545369, 0.7026508, 0.52448627],
    [0.59125739, 0.7042647, 0.52495385],
    [0.59706151, 0.70587175, 0.5254452],
    [0.60286782, 0.70747143, 0.52596129],
    [0.60867759, 0.70906337, 0.52650253],
    [0.6144868, 0.71064932, 0.52706444],
    [0.62030288, 0.71222648, 0.52765273],
    [0.62611978, 0.71379741, 0.52826106],
    [0.63193919, 0.71536155, 0.5288904],
    [0.63776486, 0.71691754, 0.52954313],
    [0.64359244, 0.71846728, 0.5302144],
    [0.6494244, 0.72000988, 0.53090591],
    [0.65526331, 0.72154441, 0.53161893],
    [0.66110569, 0.72307243, 0.53234969],
    [0.66695291, 0.72459349, 0.53309853],
    [0.67280945, 0.7261058, 0.53386897],
    [0.67867109, 0.72761122, 0.53465664],
    [0.68453833, 0.72910962, 0.53546156],
    [0.690414, 0.73059989, 0.5362857],
    [0.69629887, 0.73208176, 0.53712903],
    [0.70219121, 0.73355607, 0.53798943],
    [0.70809123, 0.73502275, 0.53886718],
    [0.71400019, 0.73648127, 0.5397635],
    [0.71992042, 0.73793064, 0.54068002],
    [0.72585007, 0.73937178, 0.54161418],
    [0.73178821, 0.74080499, 0.54256686],
    [0.7377363, 0.74222974, 0.54353793],
    [0.74369493, 0.74364577, 0.54452813],
    [0.74967672, 0.74504881, 0.54552801],
    [0.7556707, 0.74644644, 0.54649358],
    [0.7616816, 0.74783692, 0.54742283],
    [0.76771175, 0.74921935, 0.54831463],
    [0.77375806, 0.75059494, 0.5491687],
    [0.77981703, 0.75196514, 0.54998449],
    [0.78589684, 0.75332665, 0.55076069],
    [0.79199845, 0.75467909, 0.55149619],
    [0.79810993, 0.75602746, 0.55218964],
    [0.80424475, 0.75736624, 0.55283912],
    [0.81039833, 0.75869739, 0.55344303],
    [0.81656628, 0.7600229, 0.5539992],
    [0.82275821, 0.76133883, 0.5545044],
    [0.82896261, 0.76265033, 0.55495538],
    [0.83518836, 0.76395367, 0.5553498],
    [0.84143097, 0.76525122, 0.55568118],
    [0.84768938, 0.76654365, 0.55594644],
    [0.85396784, 0.76782946, 0.55613943],
    [0.86025979, 0.76911207, 0.5562531],
    [0.86656526, 0.77039202, 0.55627941],
    [0.87288638, 0.77166902, 0.55620909],
    [0.87921949, 0.77294545, 0.55603219],
    [0.88556221, 0.77422333, 0.55573589],
    [0.89191146, 0.77550521, 0.55530557],
    [0.8982652, 0.77679341, 0.55472277],
    [0.90460776, 0.77809693, 0.55396664],
    [0.91093913, 0.77941765, 0.55301401],
    [0.91723861, 0.78076783, 0.55183511],
    [0.923489, 0.78215831, 0.55039928],
    [0.92965529, 0.78360913, 0.54867087],
    [0.93568735, 0.78514753, 0.54662123],
    [0.94152001, 0.78680765, 0.54423419],
    [0.9470492, 0.78864076, 0.54152929],
    [0.95222783, 0.79066624, 0.53858573],
    [0.95735941, 0.79272319, 0.53556443],
    [0.96251067, 0.79477643, 0.53249434],
    [0.96768256, 0.79682563, 0.52937249],
    [0.97287471, 0.79887088, 0.52619923],
    [0.97808875, 0.80091159, 0.5229697],
    [0.98332536, 0.80294748, 0.51968139],
    [0.98858843, 0.80497722, 0.51632348],
    [0.99391604, 0.8069879, 0.51279565],
]

# Convert to plotly
cm_data_plotly = [
    [frac, f"rgb({cm[0]},{cm[1]},{cm[2]})"]
    for frac, cm in zip(np.linspace(0, 1, len(cm_data)), cm_data)
]
fca_colormap = cm_data_plotly